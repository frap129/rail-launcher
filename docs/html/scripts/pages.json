[{"name":"class MainActivity : TemplateActivity","description":"dev.maples.rail.MainActivity","location":"app/dev.maples.rail/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : TemplateActivity","dev.maples.rail.MainActivity"]},{"name":"constructor()","description":"dev.maples.rail.MainActivity.MainActivity","location":"app/dev.maples.rail/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","dev.maples.rail.MainActivity.MainActivity"]},{"name":"class App(info: LauncherActivityInfo, val profile: UserHandle)","description":"core.apprepo.App","location":"core/app-repo/core.apprepo/-app/index.html","searchKeys":["App","class App(info: LauncherActivityInfo, val profile: UserHandle)","core.apprepo.App"]},{"name":"class AppRepository(context: Context)","description":"core.apprepo.AppRepository","location":"core/app-repo/core.apprepo/-app-repository/index.html","searchKeys":["AppRepository","class AppRepository(context: Context)","core.apprepo.AppRepository"]},{"name":"constructor(context: Context)","description":"core.apprepo.AppRepository.AppRepository","location":"core/app-repo/core.apprepo/-app-repository/-app-repository.html","searchKeys":["AppRepository","constructor(context: Context)","core.apprepo.AppRepository.AppRepository"]},{"name":"constructor(info: LauncherActivityInfo, profile: UserHandle)","description":"core.apprepo.App.App","location":"core/app-repo/core.apprepo/-app/-app.html","searchKeys":["App","constructor(info: LauncherActivityInfo, profile: UserHandle)","core.apprepo.App.App"]},{"name":"fun getIcon(context: Context): Drawable","description":"core.apprepo.App.getIcon","location":"core/app-repo/core.apprepo/-app/get-icon.html","searchKeys":["getIcon","fun getIcon(context: Context): Drawable","core.apprepo.App.getIcon"]},{"name":"fun launch(context: Context)","description":"core.apprepo.App.launch","location":"core/app-repo/core.apprepo/-app/launch.html","searchKeys":["launch","fun launch(context: Context)","core.apprepo.App.launch"]},{"name":"val apps: StateFlow<List<App>>","description":"core.apprepo.AppRepository.apps","location":"core/app-repo/core.apprepo/-app-repository/apps.html","searchKeys":["apps","val apps: StateFlow<List<App>>","core.apprepo.AppRepository.apps"]},{"name":"val label: String","description":"core.apprepo.App.label","location":"core/app-repo/core.apprepo/-app/label.html","searchKeys":["label","val label: String","core.apprepo.App.label"]},{"name":"val packageName: String","description":"core.apprepo.App.packageName","location":"core/app-repo/core.apprepo/-app/package-name.html","searchKeys":["packageName","val packageName: String","core.apprepo.App.packageName"]},{"name":"val profile: UserHandle","description":"core.apprepo.App.profile","location":"core/app-repo/core.apprepo/-app/profile.html","searchKeys":["profile","val profile: UserHandle","core.apprepo.App.profile"]},{"name":"class SettingsViewModel(context: Context, prefsRepo: PreferencesRepository) : ViewModel","description":"feature.settings.SettingsViewModel","location":"feature/settings/feature.settings/-settings-view-model/index.html","searchKeys":["SettingsViewModel","class SettingsViewModel(context: Context, prefsRepo: PreferencesRepository) : ViewModel","feature.settings.SettingsViewModel"]},{"name":"constructor(context: Context, prefsRepo: PreferencesRepository)","description":"feature.settings.SettingsViewModel.SettingsViewModel","location":"feature/settings/feature.settings/-settings-view-model/-settings-view-model.html","searchKeys":["SettingsViewModel","constructor(context: Context, prefsRepo: PreferencesRepository)","feature.settings.SettingsViewModel.SettingsViewModel"]},{"name":"fun SettingsScreen(navController: NavController, viewModel: SettingsViewModel = koinViewModel())","description":"feature.settings.SettingsScreen","location":"feature/settings/feature.settings/-settings-screen.html","searchKeys":["SettingsScreen","fun SettingsScreen(navController: NavController, viewModel: SettingsViewModel = koinViewModel())","feature.settings.SettingsScreen"]},{"name":"val settingsDestination: Destination","description":"feature.settings.settingsDestination","location":"feature/settings/feature.settings/settings-destination.html","searchKeys":["settingsDestination","val settingsDestination: Destination","feature.settings.settingsDestination"]},{"name":"class LauncherScrollRailHelper(context: Context, val railItems: List<Char>, listState: LazyListState, visibilities: MutableMap<Char, MutableState<Boolean>>) : ScrollRailHelper","description":"feature.launcher.LauncherScrollRailHelper","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/index.html","searchKeys":["LauncherScrollRailHelper","class LauncherScrollRailHelper(context: Context, val railItems: List<Char>, listState: LazyListState, visibilities: MutableMap<Char, MutableState<Boolean>>) : ScrollRailHelper","feature.launcher.LauncherScrollRailHelper"]},{"name":"class LauncherViewModel(context: Context, appRepository: AppRepository) : ViewModel","description":"feature.launcher.LauncherViewModel","location":"feature/launcher/feature.launcher/-launcher-view-model/index.html","searchKeys":["LauncherViewModel","class LauncherViewModel(context: Context, appRepository: AppRepository) : ViewModel","feature.launcher.LauncherViewModel"]},{"name":"constructor(context: Context, appRepository: AppRepository)","description":"feature.launcher.LauncherViewModel.LauncherViewModel","location":"feature/launcher/feature.launcher/-launcher-view-model/-launcher-view-model.html","searchKeys":["LauncherViewModel","constructor(context: Context, appRepository: AppRepository)","feature.launcher.LauncherViewModel.LauncherViewModel"]},{"name":"constructor(context: Context, railItems: List<Char>, listState: LazyListState, visibilities: MutableMap<Char, MutableState<Boolean>>)","description":"feature.launcher.LauncherScrollRailHelper.LauncherScrollRailHelper","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/-launcher-scroll-rail-helper.html","searchKeys":["LauncherScrollRailHelper","constructor(context: Context, railItems: List<Char>, listState: LazyListState, visibilities: MutableMap<Char, MutableState<Boolean>>)","feature.launcher.LauncherScrollRailHelper.LauncherScrollRailHelper"]},{"name":"fun LauncherScreen(navController: NavController, viewModel: LauncherViewModel = koinViewModel())","description":"feature.launcher.LauncherScreen","location":"feature/launcher/feature.launcher/-launcher-screen.html","searchKeys":["LauncherScreen","fun LauncherScreen(navController: NavController, viewModel: LauncherViewModel = koinViewModel())","feature.launcher.LauncherScreen"]},{"name":"fun itemGroup(label: String, items: List<App>): MutableState<Boolean>","description":"feature.launcher.itemGroup","location":"feature/launcher/feature.launcher/item-group.html","searchKeys":["itemGroup","fun itemGroup(label: String, items: List<App>): MutableState<Boolean>","feature.launcher.itemGroup"]},{"name":"open override val railItems: List<Char>","description":"feature.launcher.LauncherScrollRailHelper.railItems","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/rail-items.html","searchKeys":["railItems","open override val railItems: List<Char>","feature.launcher.LauncherScrollRailHelper.railItems"]},{"name":"open suspend override fun onScroll(currIndex: Int, prevIndex: Int)","description":"feature.launcher.LauncherScrollRailHelper.onScroll","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/on-scroll.html","searchKeys":["onScroll","open suspend override fun onScroll(currIndex: Int, prevIndex: Int)","feature.launcher.LauncherScrollRailHelper.onScroll"]},{"name":"open suspend override fun onScrollEnded(index: Int)","description":"feature.launcher.LauncherScrollRailHelper.onScrollEnded","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/on-scroll-ended.html","searchKeys":["onScrollEnded","open suspend override fun onScrollEnded(index: Int)","feature.launcher.LauncherScrollRailHelper.onScrollEnded"]},{"name":"open suspend override fun onScrollStarted(index: Int)","description":"feature.launcher.LauncherScrollRailHelper.onScrollStarted","location":"feature/launcher/feature.launcher/-launcher-scroll-rail-helper/on-scroll-started.html","searchKeys":["onScrollStarted","open suspend override fun onScrollStarted(index: Int)","feature.launcher.LauncherScrollRailHelper.onScrollStarted"]},{"name":"val launcherDestination: Destination","description":"feature.launcher.launcherDestination","location":"feature/launcher/feature.launcher/launcher-destination.html","searchKeys":["launcherDestination","val launcherDestination: Destination","feature.launcher.launcherDestination"]},{"name":"val launcherItems: Flow<SortedMap<Char, List<App>>>","description":"feature.launcher.LauncherViewModel.launcherItems","location":"feature/launcher/feature.launcher/-launcher-view-model/launcher-items.html","searchKeys":["launcherItems","val launcherItems: Flow<SortedMap<Char, List<App>>>","feature.launcher.LauncherViewModel.launcherItems"]},{"name":"abstract suspend fun onScroll(currIndex: Int, prevIndex: Int)","description":"core.ui.composables.scrollrail.ScrollRailHelper.onScroll","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail-helper/on-scroll.html","searchKeys":["onScroll","abstract suspend fun onScroll(currIndex: Int, prevIndex: Int)","core.ui.composables.scrollrail.ScrollRailHelper.onScroll"]},{"name":"abstract suspend fun onScrollEnded(index: Int)","description":"core.ui.composables.scrollrail.ScrollRailHelper.onScrollEnded","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail-helper/on-scroll-ended.html","searchKeys":["onScrollEnded","abstract suspend fun onScrollEnded(index: Int)","core.ui.composables.scrollrail.ScrollRailHelper.onScrollEnded"]},{"name":"abstract suspend fun onScrollStarted(index: Int)","description":"core.ui.composables.scrollrail.ScrollRailHelper.onScrollStarted","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail-helper/on-scroll-started.html","searchKeys":["onScrollStarted","abstract suspend fun onScrollStarted(index: Int)","core.ui.composables.scrollrail.ScrollRailHelper.onScrollStarted"]},{"name":"abstract val railItems: List<Char>","description":"core.ui.composables.scrollrail.ScrollRailHelper.railItems","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail-helper/rail-items.html","searchKeys":["railItems","abstract val railItems: List<Char>","core.ui.composables.scrollrail.ScrollRailHelper.railItems"]},{"name":"const val ANIMATION_DURATION: Int = 250","description":"core.ui.theme.ANIMATION_DURATION","location":"core/ui/core.ui.theme/-a-n-i-m-a-t-i-o-n_-d-u-r-a-t-i-o-n.html","searchKeys":["ANIMATION_DURATION","const val ANIMATION_DURATION: Int = 250","core.ui.theme.ANIMATION_DURATION"]},{"name":"constructor(icon: Int, title: String)","description":"core.ui.model.data.DestinationNavBarItem.DestinationNavBarItem","location":"core/ui/core.ui.model.data/-destination-nav-bar-item/-destination-nav-bar-item.html","searchKeys":["DestinationNavBarItem","constructor(icon: Int, title: String)","core.ui.model.data.DestinationNavBarItem.DestinationNavBarItem"]},{"name":"constructor(route: String, content: (NavController, NavBackStackEntry) -> Unit, deepLinks: List<NavDeepLink> = emptyList(), enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?? = {\n        fadeIn(animationSpec = tween(ANIMATION_DURATION))\n    }, exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?? = {\n        fadeOut(animationSpec = tween(ANIMATION_DURATION))\n    }, arguments: List<NamedNavArgument> = emptyList(), showNavBar: Boolean = false, navBarItem: DestinationNavBarItem? = null)","description":"core.ui.model.data.Destination.Destination","location":"core/ui/core.ui.model.data/-destination/-destination.html","searchKeys":["Destination","constructor(route: String, content: (NavController, NavBackStackEntry) -> Unit, deepLinks: List<NavDeepLink> = emptyList(), enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?? = {\n        fadeIn(animationSpec = tween(ANIMATION_DURATION))\n    }, exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?? = {\n        fadeOut(animationSpec = tween(ANIMATION_DURATION))\n    }, arguments: List<NamedNavArgument> = emptyList(), showNavBar: Boolean = false, navBarItem: DestinationNavBarItem? = null)","core.ui.model.data.Destination.Destination"]},{"name":"fun App(destinations: List<Destination>)","description":"core.ui.App","location":"core/ui/core.ui/-app.html","searchKeys":["App","fun App(destinations: List<Destination>)","core.ui.App"]},{"name":"fun AppFrame(content: () -> Unit)","description":"core.ui.AppFrame","location":"core/ui/core.ui/-app-frame.html","searchKeys":["AppFrame","fun AppFrame(content: () -> Unit)","core.ui.AppFrame"]},{"name":"fun AppTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: () -> Unit)","description":"core.ui.theme.AppTheme","location":"core/ui/core.ui.theme/-app-theme.html","searchKeys":["AppTheme","fun AppTheme(darkTheme: Boolean = isSystemInDarkTheme(), dynamicColor: Boolean = true, content: () -> Unit)","core.ui.theme.AppTheme"]},{"name":"fun ScrollRail(modifier: Modifier = Modifier, scrollRailHelper: ScrollRailHelper)","description":"core.ui.composables.scrollrail.ScrollRail","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail.html","searchKeys":["ScrollRail","fun ScrollRail(modifier: Modifier = Modifier, scrollRailHelper: ScrollRailHelper)","core.ui.composables.scrollrail.ScrollRail"]},{"name":"fun getColorScheme(accent: Color, backgroundLight: Color, backgroundMid: Color, backgroundDark: Color): ColorScheme","description":"core.ui.theme.getColorScheme","location":"core/ui/core.ui.theme/get-color-scheme.html","searchKeys":["getColorScheme","fun getColorScheme(accent: Color, backgroundLight: Color, backgroundMid: Color, backgroundDark: Color): ColorScheme","core.ui.theme.getColorScheme"]},{"name":"fun getTypography(): Typography","description":"core.ui.theme.getTypography","location":"core/ui/core.ui.theme/get-typography.html","searchKeys":["getTypography","fun getTypography(): Typography","core.ui.theme.getTypography"]},{"name":"interface ScrollRailHelper","description":"core.ui.composables.scrollrail.ScrollRailHelper","location":"core/ui/core.ui.composables.scrollrail/-scroll-rail-helper/index.html","searchKeys":["ScrollRailHelper","interface ScrollRailHelper","core.ui.composables.scrollrail.ScrollRailHelper"]},{"name":"open class Destination(val route: String, val content: (NavController, NavBackStackEntry) -> Unit, val deepLinks: List<NavDeepLink> = emptyList(), val enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?? = {\n        fadeIn(animationSpec = tween(ANIMATION_DURATION))\n    }, val exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?? = {\n        fadeOut(animationSpec = tween(ANIMATION_DURATION))\n    }, val arguments: List<NamedNavArgument> = emptyList(), val showNavBar: Boolean = false, val navBarItem: DestinationNavBarItem? = null)","description":"core.ui.model.data.Destination","location":"core/ui/core.ui.model.data/-destination/index.html","searchKeys":["Destination","open class Destination(val route: String, val content: (NavController, NavBackStackEntry) -> Unit, val deepLinks: List<NavDeepLink> = emptyList(), val enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition?? = {\n        fadeIn(animationSpec = tween(ANIMATION_DURATION))\n    }, val exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition?? = {\n        fadeOut(animationSpec = tween(ANIMATION_DURATION))\n    }, val arguments: List<NamedNavArgument> = emptyList(), val showNavBar: Boolean = false, val navBarItem: DestinationNavBarItem? = null)","core.ui.model.data.Destination"]},{"name":"open class DestinationNavBarItem(val icon: Int, val title: String)","description":"core.ui.model.data.DestinationNavBarItem","location":"core/ui/core.ui.model.data/-destination-nav-bar-item/index.html","searchKeys":["DestinationNavBarItem","open class DestinationNavBarItem(val icon: Int, val title: String)","core.ui.model.data.DestinationNavBarItem"]},{"name":"open val arguments: List<NamedNavArgument>","description":"core.ui.model.data.Destination.arguments","location":"core/ui/core.ui.model.data/-destination/arguments.html","searchKeys":["arguments","open val arguments: List<NamedNavArgument>","core.ui.model.data.Destination.arguments"]},{"name":"open val content: (NavController, NavBackStackEntry) -> Unit","description":"core.ui.model.data.Destination.content","location":"core/ui/core.ui.model.data/-destination/content.html","searchKeys":["content","open val content: (NavController, NavBackStackEntry) -> Unit","core.ui.model.data.Destination.content"]},{"name":"open val deepLinks: List<NavDeepLink>","description":"core.ui.model.data.Destination.deepLinks","location":"core/ui/core.ui.model.data/-destination/deep-links.html","searchKeys":["deepLinks","open val deepLinks: List<NavDeepLink>","core.ui.model.data.Destination.deepLinks"]},{"name":"open val enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition??","description":"core.ui.model.data.Destination.enterTransition","location":"core/ui/core.ui.model.data/-destination/enter-transition.html","searchKeys":["enterTransition","open val enterTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> EnterTransition??","core.ui.model.data.Destination.enterTransition"]},{"name":"open val exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition??","description":"core.ui.model.data.Destination.exitTransition","location":"core/ui/core.ui.model.data/-destination/exit-transition.html","searchKeys":["exitTransition","open val exitTransition: AnimatedContentTransitionScope<NavBackStackEntry>.() -> ExitTransition??","core.ui.model.data.Destination.exitTransition"]},{"name":"open val navBarItem: DestinationNavBarItem? = null","description":"core.ui.model.data.Destination.navBarItem","location":"core/ui/core.ui.model.data/-destination/nav-bar-item.html","searchKeys":["navBarItem","open val navBarItem: DestinationNavBarItem? = null","core.ui.model.data.Destination.navBarItem"]},{"name":"open val route: String","description":"core.ui.model.data.Destination.route","location":"core/ui/core.ui.model.data/-destination/route.html","searchKeys":["route","open val route: String","core.ui.model.data.Destination.route"]},{"name":"open val showNavBar: Boolean = false","description":"core.ui.model.data.Destination.showNavBar","location":"core/ui/core.ui.model.data/-destination/show-nav-bar.html","searchKeys":["showNavBar","open val showNavBar: Boolean = false","core.ui.model.data.Destination.showNavBar"]},{"name":"val icon: Int","description":"core.ui.model.data.DestinationNavBarItem.icon","location":"core/ui/core.ui.model.data/-destination-nav-bar-item/icon.html","searchKeys":["icon","val icon: Int","core.ui.model.data.DestinationNavBarItem.icon"]},{"name":"val title: String","description":"core.ui.model.data.DestinationNavBarItem.title","location":"core/ui/core.ui.model.data/-destination-nav-bar-item/title.html","searchKeys":["title","val title: String","core.ui.model.data.DestinationNavBarItem.title"]},{"name":"fun launchInBackground(block: suspend CoroutineScope.() -> Unit): Job","description":"core.util.launchInBackground","location":"core/util/core.util/launch-in-background.html","searchKeys":["launchInBackground","fun launchInBackground(block: suspend CoroutineScope.() -> Unit): Job","core.util.launchInBackground"]},{"name":"fun screenHeightDp(context: Context): Float","description":"core.util.screenHeightDp","location":"core/util/core.util/screen-height-dp.html","searchKeys":["screenHeightDp","fun screenHeightDp(context: Context): Float","core.util.screenHeightDp"]},{"name":"fun screenHeightPx(context: Context): Int","description":"core.util.screenHeightPx","location":"core/util/core.util/screen-height-px.html","searchKeys":["screenHeightPx","fun screenHeightPx(context: Context): Int","core.util.screenHeightPx"]},{"name":"class PreferencesRepository(context: Context)","description":"core.prefsrepo.PreferencesRepository","location":"core/prefs-repo/core.prefsrepo/-preferences-repository/index.html","searchKeys":["PreferencesRepository","class PreferencesRepository(context: Context)","core.prefsrepo.PreferencesRepository"]},{"name":"constructor(context: Context)","description":"core.prefsrepo.PreferencesRepository.PreferencesRepository","location":"core/prefs-repo/core.prefsrepo/-preferences-repository/-preferences-repository.html","searchKeys":["PreferencesRepository","constructor(context: Context)","core.prefsrepo.PreferencesRepository.PreferencesRepository"]},{"name":"class MainApplication : Application","description":"core.lifecycle.MainApplication","location":"core/lifecycle/core.lifecycle/-main-application/index.html","searchKeys":["MainApplication","class MainApplication : Application","core.lifecycle.MainApplication"]},{"name":"constructor()","description":"core.lifecycle.MainApplication.MainApplication","location":"core/lifecycle/core.lifecycle/-main-application/-main-application.html","searchKeys":["MainApplication","constructor()","core.lifecycle.MainApplication.MainApplication"]},{"name":"constructor()","description":"core.lifecycle.TemplateActivity.TemplateActivity","location":"core/lifecycle/core.lifecycle/-template-activity/-template-activity.html","searchKeys":["TemplateActivity","constructor()","core.lifecycle.TemplateActivity.TemplateActivity"]},{"name":"open class TemplateActivity : ComponentActivity","description":"core.lifecycle.TemplateActivity","location":"core/lifecycle/core.lifecycle/-template-activity/index.html","searchKeys":["TemplateActivity","open class TemplateActivity : ComponentActivity","core.lifecycle.TemplateActivity"]},{"name":"open override fun onCreate()","description":"core.lifecycle.MainApplication.onCreate","location":"core/lifecycle/core.lifecycle/-main-application/on-create.html","searchKeys":["onCreate","open override fun onCreate()","core.lifecycle.MainApplication.onCreate"]}]